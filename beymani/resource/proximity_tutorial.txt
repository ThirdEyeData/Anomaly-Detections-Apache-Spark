This tutorial provides details of finding outliers based on average distance to neighbors.
It uses two MR  jobs, SameTypeSimilarity and AverageDistance. If you want to use credit card 
transactions as input, you could use cct.rb to generate data. Make sure that utol.rb is in the path
../lib. util.rb can be checked out from my  project visitante. It's under script/ruby/lib directory
in that project.

Transaction Simarity
====================
Herte is the script for SameTypeSimilarity

JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.feature.SameTypeSimilarity

echo "running mr"
IN_PATH=/user/pranab/cct/input
OUT_PATH=/user/pranab/cct/simi
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/fraud/cct.properties  $IN_PATH  $OUT_PATH

Average Ditsance to Neighbors
=============================
Here is a sample script for AverageDistance

JAR_NAME=/home/pranab/Projects/beymani/target/beymani-1.0.jar
CLASS_NAME=org.beymani.proximity.AverageDistance

echo "running mr"
IN_PATH=/user/pranab/cct/simi
OUT_PATH=/user/pranab/cct/avdi
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/fraud/cct.properties  $IN_PATH  $OUT_PATH

Configuration
=============
Here is a sample cct.properties

field.delim.regex=,
field.delim=,
num.reducer=1
sts.bucket.count=1000
sts.same.schema.file.path=/pranab/meta/prod/prod.json
avd.top.match.count=10
avd.top.match.average=true
avd.top.match.density=false
avd.top.match.grouping=false



